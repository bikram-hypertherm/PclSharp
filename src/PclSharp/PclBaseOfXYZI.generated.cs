// Code generated by a template
using System;
using System.Numerics;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using PclSharp.Struct;
using PclSharp.Std;

namespace PclSharp
{
	public static unsafe partial class Invoke
	{
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void pclbase_xyzi_setInputCloud(IntPtr ptr, IntPtr cloud);
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern void pclbase_xyzi_setIndices(IntPtr ptr, IntPtr indices);
		
		[DllImport(Native.DllName, CallingConvention=Native.CallingConvention)]
		public static extern PointXYZI* pclbase_xyzi_indexGet(IntPtr ptr, int idx);
	}

	public static unsafe class PclBaseOfXYZI
	{
		public static void SetInputCloud(this PclBase<PointXYZI> _ptr, PointCloud<PointXYZI> cloud)
			=> Invoke.pclbase_xyzi_setInputCloud(_ptr, cloud);

		public static void SetIndices(this PclBase<PointXYZI> _ptr, VectorOfInt indices)
			=> Invoke.pclbase_xyzi_setIndices(_ptr, indices);

		public static ref PointXYZI Index(this PclBase<PointXYZI> _ptr, int idx)
			=> ref Unsafe.AsRef<PointXYZI>(Invoke.pclbase_xyzi_indexGet(_ptr, idx));
	}
}
